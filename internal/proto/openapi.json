{
  "openapi": "3.1.0",
  "info": {},
  "paths": {
    "/yoshino_s.soar_helper.v1.IcpQueryService/Query": {
      "post": {
        "tags": [
          "yoshino_s.soar_helper.v1.IcpQueryService"
        ],
        "summary": "Query",
        "operationId": "yoshino_s.soar_helper.v1.IcpQueryService.Query",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.QueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.QueryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/yoshino_s.soar_helper.v1.IcpQueryService/BatchQuery": {
      "post": {
        "tags": [
          "yoshino_s.soar_helper.v1.IcpQueryService"
        ],
        "summary": "BatchQuery",
        "operationId": "yoshino_s.soar_helper.v1.IcpQueryService.BatchQuery",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.BatchQueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.BatchQueryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/yoshino_s.soar_helper.v1.IcpQueryService/Statistic": {
      "post": {
        "tags": [
          "yoshino_s.soar_helper.v1.IcpQueryService"
        ],
        "summary": "Statistic",
        "operationId": "yoshino_s.soar_helper.v1.IcpQueryService.Statistic",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/google.protobuf.Empty"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.StatisticResponse"
                }
              }
            }
          }
        }
      }
    },
    "/yoshino_s.soar_helper.v1.RunnerService/Run": {
      "post": {
        "tags": [
          "yoshino_s.soar_helper.v1.RunnerService"
        ],
        "summary": "Run",
        "operationId": "yoshino_s.soar_helper.v1.RunnerService.Run",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.RunRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.RunResponse"
                }
              }
            }
          }
        }
      }
    },
    "/yoshino_s.soar_helper.v1.RunnerService/RunStream": {},
    "/yoshino_s.soar_helper.v1.RunnerService/ReadFile": {
      "post": {
        "tags": [
          "yoshino_s.soar_helper.v1.RunnerService"
        ],
        "summary": "ReadFile",
        "operationId": "yoshino_s.soar_helper.v1.RunnerService.ReadFile",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.ReadFileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.ReadFileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/yoshino_s.soar_helper.v1.RunnerService/WriteFile": {
      "post": {
        "tags": [
          "yoshino_s.soar_helper.v1.RunnerService"
        ],
        "summary": "WriteFile",
        "operationId": "yoshino_s.soar_helper.v1.RunnerService.WriteFile",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.WriteFileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.WriteFileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/yoshino_s.soar_helper.v1.S3Service/Upload": {
      "post": {
        "tags": [
          "yoshino_s.soar_helper.v1.S3Service"
        ],
        "summary": "Upload",
        "operationId": "yoshino_s.soar_helper.v1.S3Service.Upload",
        "parameters": [
          {
            "name": "Connect-Protocol-Version",
            "in": "header",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/connect-protocol-version"
            }
          },
          {
            "name": "Connect-Timeout-Ms",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/connect-timeout-header"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.UploadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connect.error"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.UploadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/yoshino_s.soar_helper.v1.ToolsService/Unauthor": {},
    "/yoshino_s.soar_helper.v1.ToolsService/Httpx": {}
  },
  "components": {
    "schemas": {
      "google.protobuf.Empty": {
        "type": "object",
        "description": "A generic empty message that you can re-use to avoid defining duplicated\n empty messages in your APIs. A typical example is to use it as the request\n or the response type of an API method. For instance:\n\n     service Foo {\n       rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n     }"
      },
      "google.protobuf.Timestamp": {
        "type": "string",
        "format": "date-time",
        "description": "A Timestamp represents a point in time independent of any time zone or local\n calendar, encoded as a count of seconds and fractions of seconds at\n nanosecond resolution. The count is relative to an epoch at UTC midnight on\n January 1, 1970, in the proleptic Gregorian calendar which extends the\n Gregorian calendar backwards to year one.\n\n All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\n second table is needed for interpretation, using a [24-hour linear\n smear](https://developers.google.com/time/smear).\n\n The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\n restricting to that range, we ensure that we can convert to and from [RFC\n 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.\n\n # Examples\n\n Example 1: Compute Timestamp from POSIX `time()`.\n\n     Timestamp timestamp;\n     timestamp.set_seconds(time(NULL));\n     timestamp.set_nanos(0);\n\n Example 2: Compute Timestamp from POSIX `gettimeofday()`.\n\n     struct timeval tv;\n     gettimeofday(\u0026tv, NULL);\n\n     Timestamp timestamp;\n     timestamp.set_seconds(tv.tv_sec);\n     timestamp.set_nanos(tv.tv_usec * 1000);\n\n Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.\n\n     FILETIME ft;\n     GetSystemTimeAsFileTime(\u0026ft);\n     UINT64 ticks = (((UINT64)ft.dwHighDateTime) \u003c\u003c 32) | ft.dwLowDateTime;\n\n     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z\n     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.\n     Timestamp timestamp;\n     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));\n     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));\n\n Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.\n\n     long millis = System.currentTimeMillis();\n\n     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)\n         .setNanos((int) ((millis % 1000) * 1000000)).build();\n\n Example 5: Compute Timestamp from Java `Instant.now()`.\n\n     Instant now = Instant.now();\n\n     Timestamp timestamp =\n         Timestamp.newBuilder().setSeconds(now.getEpochSecond())\n             .setNanos(now.getNano()).build();\n\n Example 6: Compute Timestamp from current time in Python.\n\n     timestamp = Timestamp()\n     timestamp.GetCurrentTime()\n\n # JSON Mapping\n\n In JSON format, the Timestamp type is encoded as a string in the\n [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format. That is, the\n format is \"{year}-{month}-{day}T{hour}:{min}:{sec}[.{frac_sec}]Z\"\n where {year} is always expressed using four digits while {month}, {day},\n {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional\n seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),\n are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone\n is required. A proto3 JSON serializer should always use UTC (as indicated by\n \"Z\") when printing the Timestamp type and a proto3 JSON parser should be\n able to accept both UTC and other timezones (as indicated by an offset).\n\n For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past\n 01:30 UTC on January 15, 2017.\n\n In JavaScript, one can convert a Date object to this format using the\n standard\n [toISOString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString)\n method. In Python, a standard `datetime.datetime` object can be converted\n to this format using\n [`strftime`](https://docs.python.org/2/library/time.html#time.strftime) with\n the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use\n the Joda Time's [`ISODateTimeFormat.dateTime()`](\n http://joda-time.sourceforge.net/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime()\n ) to obtain a formatter capable of generating timestamps in this format."
      },
      "yoshino_s.soar_helper.v1.BatchQueryRequest": {
        "type": "object",
        "properties": {
          "hosts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "hosts"
          },
          "noCache": {
            "type": "boolean",
            "title": "no_cache"
          }
        },
        "title": "BatchQueryRequest",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.BatchQueryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.IcpRecord"
            },
            "title": "data"
          },
          "errors": {
            "type": "object",
            "title": "errors",
            "additionalProperties": {
              "type": "string",
              "title": "value"
            }
          }
        },
        "title": "BatchQueryResponse",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.BatchQueryResponse.ErrorsEntry": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "title": "key"
          },
          "value": {
            "type": "string",
            "title": "value"
          }
        },
        "title": "ErrorsEntry",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.IcpRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "integer",
              "string"
            ],
            "title": "id",
            "format": "int64"
          },
          "host": {
            "type": "string",
            "title": "host"
          },
          "city": {
            "type": "string",
            "title": "city"
          },
          "province": {
            "type": "string",
            "title": "province"
          },
          "company": {
            "type": "string",
            "title": "company"
          },
          "owner": {
            "type": "string",
            "title": "owner"
          },
          "type": {
            "type": "string",
            "title": "type"
          },
          "homepage": {
            "type": "string",
            "title": "homepage"
          },
          "permit": {
            "type": "string",
            "title": "permit"
          },
          "createdAt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/google.protobuf.Timestamp"
              }
            ],
            "title": "created_at"
          },
          "updatedAt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/google.protobuf.Timestamp"
              }
            ],
            "title": "updated_at"
          },
          "cached": {
            "type": "boolean",
            "title": "cached"
          },
          "input": {
            "type": "string",
            "title": "input"
          },
          "webName": {
            "type": "string",
            "title": "web_name"
          }
        },
        "title": "IcpRecord",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.QueryRequest": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "title": "host"
          },
          "noCache": {
            "type": "boolean",
            "title": "no_cache"
          }
        },
        "title": "QueryRequest",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.QueryResponse": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.IcpRecord"
              }
            ],
            "title": "data"
          }
        },
        "title": "QueryResponse",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.StatisticResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": [
              "integer",
              "string"
            ],
            "title": "total",
            "format": "int64"
          }
        },
        "title": "StatisticResponse",
        "additionalProperties": false
      },
      "connect-protocol-version": {
        "type": "number",
        "title": "Connect-Protocol-Version",
        "enum": [
          1
        ],
        "description": "Define the version of the Connect protocol",
        "const": 1
      },
      "connect-timeout-header": {
        "type": "number",
        "title": "Connect-Timeout-Ms",
        "description": "Define the timeout, in ms"
      },
      "connect.error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "examples": [
              "CodeNotFound"
            ],
            "enum": [
              "CodeCanceled",
              "CodeUnknown",
              "CodeInvalidArgument",
              "CodeDeadlineExceeded",
              "CodeNotFound",
              "CodeAlreadyExists",
              "CodePermissionDenied",
              "CodeResourceExhausted",
              "CodeFailedPrecondition",
              "CodeAborted",
              "CodeOutOfRange",
              "CodeInternal",
              "CodeUnavailable",
              "CodeDataLoss",
              "CodeUnauthenticated"
            ],
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
          },
          "message": {
            "type": "string",
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
          },
          "detail": {
            "$ref": "#/components/schemas/google.protobuf.Any"
          }
        },
        "title": "Connect Error",
        "additionalProperties": true,
        "description": "Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation"
      },
      "google.protobuf.Any": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "format": "binary"
          },
          "debug": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "additionalProperties": true,
        "description": "Contains an arbitrary serialized message along with a @type that describes the type of the serialized message."
      },
      "yoshino_s.soar_helper.v1.RunStreamDataType": {
        "type": "string",
        "title": "RunStreamDataType",
        "enum": [
          "STDOUT",
          "STDERR",
          "EXIT_CODE"
        ]
      },
      "yoshino_s.soar_helper.v1.ReadFileRequest": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "title": "path"
          }
        },
        "title": "ReadFileRequest",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.ReadFileResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "title": "data"
          }
        },
        "title": "ReadFileResponse",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.RunRequest": {
        "type": "object",
        "properties": {
          "commands": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "commands"
          },
          "stdin": {
            "type": "string",
            "title": "stdin"
          },
          "cwd": {
            "type": "string",
            "title": "cwd"
          }
        },
        "title": "RunRequest",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.RunResponse": {
        "type": "object",
        "properties": {
          "stdout": {
            "type": "string",
            "title": "stdout"
          },
          "stderr": {
            "type": "string",
            "title": "stderr"
          },
          "exitCode": {
            "type": "integer",
            "title": "exit_code",
            "format": "int32"
          }
        },
        "title": "RunResponse",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.RunStreamData": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/yoshino_s.soar_helper.v1.RunStreamDataType"
              }
            ],
            "title": "type"
          },
          "data": {
            "type": "string",
            "title": "data"
          },
          "exitCode": {
            "type": "integer",
            "title": "exit_code",
            "format": "int32"
          }
        },
        "title": "RunStreamData",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.WriteFileRequest": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "title": "path"
          },
          "content": {
            "type": "string",
            "title": "content"
          }
        },
        "title": "WriteFileRequest",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.WriteFileResponse": {
        "type": "object",
        "title": "WriteFileResponse",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.UploadRequest": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "title": "path"
          },
          "key": {
            "type": "string",
            "title": "key"
          }
        },
        "title": "UploadRequest",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.UploadResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "url"
          }
        },
        "title": "UploadResponse",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.ExploitResult": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "title": "target"
          },
          "success": {
            "type": "boolean",
            "title": "success"
          },
          "result": {
            "type": "string",
            "title": "result"
          },
          "error": {
            "type": "string",
            "title": "error"
          },
          "exploit": {
            "type": "string",
            "title": "exploit"
          },
          "screenshot": {
            "type": "string",
            "title": "screenshot"
          },
          "extra": {
            "type": "string",
            "title": "extra"
          },
          "spent": {
            "type": [
              "integer",
              "string"
            ],
            "title": "spent",
            "format": "int64"
          }
        },
        "title": "ExploitResult",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.HttpxRequest": {
        "type": "object",
        "properties": {
          "targets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "targets"
          },
          "timeout": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timeout",
            "format": "int64"
          },
          "concurrent": {
            "type": "integer",
            "title": "concurrent",
            "format": "int32"
          },
          "matchStatusCode": {
            "type": "integer",
            "title": "match_status_code",
            "format": "int32"
          },
          "matchString": {
            "type": "string",
            "title": "match_string"
          },
          "screenshot": {
            "type": "boolean",
            "title": "screenshot"
          },
          "upload": {
            "type": "boolean",
            "title": "upload"
          },
          "followRedirects": {
            "type": "boolean",
            "title": "follow_redirects"
          },
          "followHostRedirects": {
            "type": "boolean",
            "title": "follow_host_redirects"
          },
          "fullScreenshot": {
            "type": "boolean",
            "title": "full_screenshot"
          },
          "path": {
            "type": "string",
            "title": "path"
          }
        },
        "title": "HttpxRequest",
        "additionalProperties": false
      },
      "yoshino_s.soar_helper.v1.UnauthorRequest": {
        "type": "object",
        "properties": {
          "targets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "targets"
          },
          "timeout": {
            "type": [
              "integer",
              "string"
            ],
            "title": "timeout",
            "format": "int64"
          },
          "concurrent": {
            "type": "integer",
            "title": "concurrent",
            "format": "int32"
          },
          "protocol": {
            "type": "string",
            "title": "protocol"
          },
          "screenshot": {
            "type": "boolean",
            "title": "screenshot"
          },
          "upload": {
            "type": "boolean",
            "title": "upload"
          },
          "screenshotWidth": {
            "type": "integer",
            "title": "screenshot_width",
            "format": "int32"
          }
        },
        "title": "UnauthorRequest",
        "additionalProperties": false
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "yoshino_s.soar_helper.v1.IcpQueryService"
    },
    {
      "name": "yoshino_s.soar_helper.v1.RunnerService"
    },
    {
      "name": "yoshino_s.soar_helper.v1.S3Service"
    },
    {
      "name": "yoshino_s.soar_helper.v1.ToolsService"
    }
  ]
}