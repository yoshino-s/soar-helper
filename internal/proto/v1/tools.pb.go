// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/v1/tools.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExploitResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target     string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Success    bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Result     string `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Error      string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Exploit    string `protobuf:"bytes,5,opt,name=exploit,proto3" json:"exploit,omitempty"`
	Screenshot string `protobuf:"bytes,6,opt,name=screenshot,proto3" json:"screenshot,omitempty"`
	Extra      string `protobuf:"bytes,7,opt,name=extra,proto3" json:"extra,omitempty"`
	Spent      int64  `protobuf:"varint,8,opt,name=spent,proto3" json:"spent,omitempty"`
}

func (x *ExploitResult) Reset() {
	*x = ExploitResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_tools_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExploitResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExploitResult) ProtoMessage() {}

func (x *ExploitResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_tools_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExploitResult.ProtoReflect.Descriptor instead.
func (*ExploitResult) Descriptor() ([]byte, []int) {
	return file_proto_v1_tools_proto_rawDescGZIP(), []int{0}
}

func (x *ExploitResult) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *ExploitResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExploitResult) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ExploitResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ExploitResult) GetExploit() string {
	if x != nil {
		return x.Exploit
	}
	return ""
}

func (x *ExploitResult) GetScreenshot() string {
	if x != nil {
		return x.Screenshot
	}
	return ""
}

func (x *ExploitResult) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

func (x *ExploitResult) GetSpent() int64 {
	if x != nil {
		return x.Spent
	}
	return 0
}

type UnauthorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets         []string `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	Timeout         int64    `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Concurrent      int32    `protobuf:"varint,3,opt,name=concurrent,proto3" json:"concurrent,omitempty"`
	Protocol        string   `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Screenshot      bool     `protobuf:"varint,5,opt,name=screenshot,proto3" json:"screenshot,omitempty"`
	Upload          bool     `protobuf:"varint,6,opt,name=upload,proto3" json:"upload,omitempty"`
	ScreenshotWidth int32    `protobuf:"varint,7,opt,name=screenshot_width,json=screenshotWidth,proto3" json:"screenshot_width,omitempty"`
}

func (x *UnauthorRequest) Reset() {
	*x = UnauthorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_tools_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnauthorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnauthorRequest) ProtoMessage() {}

func (x *UnauthorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_tools_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnauthorRequest.ProtoReflect.Descriptor instead.
func (*UnauthorRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_tools_proto_rawDescGZIP(), []int{1}
}

func (x *UnauthorRequest) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *UnauthorRequest) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *UnauthorRequest) GetConcurrent() int32 {
	if x != nil {
		return x.Concurrent
	}
	return 0
}

func (x *UnauthorRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *UnauthorRequest) GetScreenshot() bool {
	if x != nil {
		return x.Screenshot
	}
	return false
}

func (x *UnauthorRequest) GetUpload() bool {
	if x != nil {
		return x.Upload
	}
	return false
}

func (x *UnauthorRequest) GetScreenshotWidth() int32 {
	if x != nil {
		return x.ScreenshotWidth
	}
	return 0
}

type HttpxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets             []string `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	Timeout             int64    `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Concurrent          int32    `protobuf:"varint,3,opt,name=concurrent,proto3" json:"concurrent,omitempty"`
	MatchStatusCode     int32    `protobuf:"varint,4,opt,name=match_status_code,json=matchStatusCode,proto3" json:"match_status_code,omitempty"`
	MatchString         string   `protobuf:"bytes,5,opt,name=match_string,json=matchString,proto3" json:"match_string,omitempty"`
	Screenshot          bool     `protobuf:"varint,6,opt,name=screenshot,proto3" json:"screenshot,omitempty"`
	Upload              bool     `protobuf:"varint,7,opt,name=upload,proto3" json:"upload,omitempty"`
	FollowRedirects     bool     `protobuf:"varint,8,opt,name=follow_redirects,json=followRedirects,proto3" json:"follow_redirects,omitempty"`
	FollowHostRedirects bool     `protobuf:"varint,9,opt,name=follow_host_redirects,json=followHostRedirects,proto3" json:"follow_host_redirects,omitempty"`
	FullScreenshot      bool     `protobuf:"varint,10,opt,name=full_screenshot,json=fullScreenshot,proto3" json:"full_screenshot,omitempty"`
	Path                string   `protobuf:"bytes,11,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *HttpxRequest) Reset() {
	*x = HttpxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_tools_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpxRequest) ProtoMessage() {}

func (x *HttpxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_tools_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpxRequest.ProtoReflect.Descriptor instead.
func (*HttpxRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_tools_proto_rawDescGZIP(), []int{2}
}

func (x *HttpxRequest) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *HttpxRequest) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *HttpxRequest) GetConcurrent() int32 {
	if x != nil {
		return x.Concurrent
	}
	return 0
}

func (x *HttpxRequest) GetMatchStatusCode() int32 {
	if x != nil {
		return x.MatchStatusCode
	}
	return 0
}

func (x *HttpxRequest) GetMatchString() string {
	if x != nil {
		return x.MatchString
	}
	return ""
}

func (x *HttpxRequest) GetScreenshot() bool {
	if x != nil {
		return x.Screenshot
	}
	return false
}

func (x *HttpxRequest) GetUpload() bool {
	if x != nil {
		return x.Upload
	}
	return false
}

func (x *HttpxRequest) GetFollowRedirects() bool {
	if x != nil {
		return x.FollowRedirects
	}
	return false
}

func (x *HttpxRequest) GetFollowHostRedirects() bool {
	if x != nil {
		return x.FollowHostRedirects
	}
	return false
}

func (x *HttpxRequest) GetFullScreenshot() bool {
	if x != nil {
		return x.FullScreenshot
	}
	return false
}

func (x *HttpxRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

var File_proto_v1_tools_proto protoreflect.FileDescriptor

var file_proto_v1_tools_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x79, 0x6f, 0x73, 0x68, 0x69, 0x6e, 0x6f, 0x5f,
	0x73, 0x2e, 0x73, 0x6f, 0x61, 0x72, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x22, 0xd5, 0x01, 0x0a, 0x0d, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x22, 0xe4, 0x01, 0x0a, 0x0f, 0x55, 0x6e, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68,
	0x6f, 0x74, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x22,
	0x85, 0x03, 0x0a, 0x0c, 0x48, 0x74, 0x74, 0x70, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x75, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x32, 0xd0, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6f, 0x6c,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x08, 0x55, 0x6e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x29, 0x2e, 0x79, 0x6f, 0x73, 0x68, 0x69, 0x6e, 0x6f, 0x5f, 0x73,
	0x2e, 0x73, 0x6f, 0x61, 0x72, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x79, 0x6f, 0x73, 0x68, 0x69, 0x6e, 0x6f, 0x5f, 0x73, 0x2e, 0x73, 0x6f, 0x61, 0x72,
	0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x6f,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x05,
	0x48, 0x74, 0x74, 0x70, 0x78, 0x12, 0x26, 0x2e, 0x79, 0x6f, 0x73, 0x68, 0x69, 0x6e, 0x6f, 0x5f,
	0x73, 0x2e, 0x73, 0x6f, 0x61, 0x72, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x74, 0x74, 0x70, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x79, 0x6f, 0x73, 0x68, 0x69, 0x6e, 0x6f, 0x5f, 0x73, 0x2e, 0x73, 0x6f, 0x61, 0x72, 0x5f, 0x68,
	0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42, 0xd8, 0x01, 0x0a, 0x1c, 0x63,
	0x6f, 0x6d, 0x2e, 0x79, 0x6f, 0x73, 0x68, 0x69, 0x6e, 0x6f, 0x5f, 0x73, 0x2e, 0x73, 0x6f, 0x61,
	0x72, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x54, 0x6f, 0x6f,
	0x6c, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x6f, 0x73, 0x68, 0x69, 0x6e, 0x6f, 0x2d, 0x73, 0x2f,
	0x73, 0x6f, 0x61, 0x72, 0x2d, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x59, 0x53, 0x58, 0xaa, 0x02, 0x16, 0x59, 0x6f, 0x73, 0x68, 0x69, 0x6e, 0x6f, 0x53, 0x2e, 0x53,
	0x6f, 0x61, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x16, 0x59,
	0x6f, 0x73, 0x68, 0x69, 0x6e, 0x6f, 0x53, 0x5c, 0x53, 0x6f, 0x61, 0x72, 0x48, 0x65, 0x6c, 0x70,
	0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x22, 0x59, 0x6f, 0x73, 0x68, 0x69, 0x6e, 0x6f, 0x53,
	0x5c, 0x53, 0x6f, 0x61, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x18, 0x59, 0x6f, 0x73,
	0x68, 0x69, 0x6e, 0x6f, 0x53, 0x3a, 0x3a, 0x53, 0x6f, 0x61, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x65,
	0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_tools_proto_rawDescOnce sync.Once
	file_proto_v1_tools_proto_rawDescData = file_proto_v1_tools_proto_rawDesc
)

func file_proto_v1_tools_proto_rawDescGZIP() []byte {
	file_proto_v1_tools_proto_rawDescOnce.Do(func() {
		file_proto_v1_tools_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_tools_proto_rawDescData)
	})
	return file_proto_v1_tools_proto_rawDescData
}

var file_proto_v1_tools_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_v1_tools_proto_goTypes = []any{
	(*ExploitResult)(nil),   // 0: yoshino_s.soar_helper.v1.ExploitResult
	(*UnauthorRequest)(nil), // 1: yoshino_s.soar_helper.v1.UnauthorRequest
	(*HttpxRequest)(nil),    // 2: yoshino_s.soar_helper.v1.HttpxRequest
}
var file_proto_v1_tools_proto_depIdxs = []int32{
	1, // 0: yoshino_s.soar_helper.v1.ToolsService.Unauthor:input_type -> yoshino_s.soar_helper.v1.UnauthorRequest
	2, // 1: yoshino_s.soar_helper.v1.ToolsService.Httpx:input_type -> yoshino_s.soar_helper.v1.HttpxRequest
	0, // 2: yoshino_s.soar_helper.v1.ToolsService.Unauthor:output_type -> yoshino_s.soar_helper.v1.ExploitResult
	0, // 3: yoshino_s.soar_helper.v1.ToolsService.Httpx:output_type -> yoshino_s.soar_helper.v1.ExploitResult
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_v1_tools_proto_init() }
func file_proto_v1_tools_proto_init() {
	if File_proto_v1_tools_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_v1_tools_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ExploitResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_tools_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*UnauthorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_tools_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*HttpxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_tools_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_tools_proto_goTypes,
		DependencyIndexes: file_proto_v1_tools_proto_depIdxs,
		MessageInfos:      file_proto_v1_tools_proto_msgTypes,
	}.Build()
	File_proto_v1_tools_proto = out.File
	file_proto_v1_tools_proto_rawDesc = nil
	file_proto_v1_tools_proto_goTypes = nil
	file_proto_v1_tools_proto_depIdxs = nil
}
